// theme colours http://getbem.com/naming/
// sass variables won't work inside component files unless we compile the sass files with the main.scss
// can use global css variables or
// use custom class names for styling like tailwind.
// @nuxtjs/style-resources allows you to use global variables
// global css vars available at component level
:root {
  --primary:  rgba(50,84,59, 1);
  // --primary: rgba(255, 166, 0, 1);
  // --error-100: rgba(223, 27, 27, 0.2);
  --font-family: 'Roboto', sans-serif;
  // TODO global breakpoint variables accessible within components
  // --breakpoint-md: 768px;
  // --breakpoint-lg: 960px;
}

// theme colours
// map the variables with key:value pairs for mixins
// https://sass-lang.com/documentation/values/maps
// controlling colour https://thoughtbot.com/blog/controlling-color-with-sass-color-functions
$colours: (
  primary: rgba(50,84,59, 1),
  // primary: rgba(255, 166, 0, 1),
  primary-100: rgba(50,84,59, 0.07),
  // primary-100: rgba(255, 166, 0, 0.07),
  secondary: #b0bec5,
  disabled: #b0bec5,
  destruct:rgba(165, 10, 69, 0.9),
  error: rgba(223, 27, 27, 0.7),
  error-100: rgba(223, 27, 27, 0.2),
  // charcoal: rgb(36,30,18),
  // deep-blue: rgb(46,8,127),
  // astra: rgb(249,236,184),
  white: rgb(255, 255, 255),
  black: rgb(0, 0, 0),
  // red: rgb(167, 33, 69),
  // yellow: rgb(255, 200, 50),
  // // green: rgb(161,219,30),
  // purple: rgb(88,29,80),
  light: rgb(255, 255, 255),
  dark: rgb(48, 48, 48),
  // dark-two: rgb(46, 44, 44),
  // green:  rgba(50,84,59, 1),
  // lgreen: #1FB542B3,
  // orange: orangered,
  // grey: #B7B4B4
);
// make the sass vars accessible to the other files with map-get
// only gets the variable doesn't create the primary class name.
// vars aren't accessible at component level unless made global.
$primary: map-get($colours, primary);
$secondary: map-get($colours, secondary);
$error: map-get($colours, error);
$error-100: map-get($colours, error-100);
// debug
// @debug map-get($colours, primary);
// @debug map-get($colours, primary-100);
// @debug map-get($colours, error);
// @debug map-get($colours, error-100);
// @debug var(--primary);

// create spacing units for mixin
$spacing: (
  1: 0.5rem,
  2: 1rem,
  3: 1.5rem,
  4: 2rem,
);
// margin and paddings will be created with mixin

// breakpoints
$breakpoint-xs: 320px;
$breakpoint-sm: 600px;
$breakpoint-md: 768px;
$breakpoint-lg: 960px; // was 1200px
$breakpoint-xl: 1500px;
