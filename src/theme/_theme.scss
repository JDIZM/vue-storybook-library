// $primary: #e01f89;
// FIXME vars dont work when imported in preview.
// $primary:rgba(50,84,59, 1);
// $secondary:#b0bec5;
$error:rgba(223, 27, 102, 0.7);
$error2: rgba( $error, 0.2 );
// controlling colour https://thoughtbot.com/blog/controlling-color-with-sass-color-functions
:root {
  // @ 16px you can use 0.5 rem for an even 8px spacing grid
  font-size: 16px; // set root font-size
  line-height: 1.4; // unitless vertical rhythm
  font-family: 'Roboto', serif;
  color: black;
}
button, span, ul, li {
  font-family: 'Roboto', serif;
  margin: 0;
  padding: 0;
  font-size: 1rem; // rem is relative to the font-size of the root element
  // margin-top: 1.4rem; // rem is relative to the font-size of the root element
}

p {
  padding-top: 1rem;
  font-size: 1rem;
}

a {
  // color: black;
  text-decoration: none;
}
// FIXME overrides component.
a:visited {
  // color: black;
}

h1,
h2,
h3,
h4,
h5 {
  // font-family: 'Source Sans Pro', sans-serif;
  // font-weight: 300;
  margin: 0;
  // margin-top: 1.4em; // em is relative to the current elements font-size.
}
h1 {
  font-size: 4.125rem;
  font-weight: 700;
}
h2 {
  font-size: 2.125rem;
  font-weight: 300;
}
h3 {
  font-size: 2rem;
  font-weight: 300;
}
h4 {
  // font-size: 1.75rem;
  // font-weight: 700;
  font-size: 1.5rem;
    font-weight: 300;
}
h5 {
  font-size: 1.5rem;
  font-weight: 300;
}
// responsive sizing
@media screen and (min-width: 768px) {
  //
  h1 {
    font-size: 6rem;
    font-weight: 700;
  }
  h2 {
    font-size: 3.75rem;
    font-weight: 300;
  }
  h3 {
    font-size: 3rem;
    font-weight: 300;
  }
  h4 {
    // font-size: 2.125rem;
    // font-weight: 700;
    font-size: 1.5rem;
    font-weight: 300;
  }
  h5 {
    font-size: 1.5rem;
    font-weight: 300;
  }
};
@media screen and (min-width: 992px) {
  //
  h1 {
    font-size: 6rem;
    font-weight: 700;
  }
  h2 {
    font-size: 3.75rem;
    font-weight: 300;
  }
  h3 {
    font-size: 3rem;
    font-weight: 300;
  }
  h4 {
    // font-size: 2.125rem;
    // font-weight: 700;
    font-size: 1.5rem;
    font-weight: 300;
  }
  h5 {
    font-size: 1.5rem;
    font-weight: 300;
  }
};
@media screen and (min-width: 1200px) {
  h1 {
    font-size: 6rem;
    font-weight: 700;
  }
  h2 {
    font-size: 3.75rem;
    font-weight: 300;
  }
  h3 {
    font-size: 3rem;
    font-weight: 300;
  }
  h4 {
    // font-size: 2.125rem;
    // font-weight: 700;
    font-size: 1.5rem;
    font-weight: 300;
  }
  h5 {
    font-size: 1.5rem;
    font-weight: 300;
  }
};

// typography elements
.overline {
  font-size: 1.5rem;
  font-weight: 300;
  font-family: 'Source Sans Pro', sans-serif;
}
.material-icons {
  vertical-align: middle;
}
// type modifiers

// patters / backgrounds

// animations
.fadein {
  animation-name: fadein;
  animation-duration: 1s;
}

// animation
@keyframes fadein {
  from {
    // bottom: -300px;
    opacity: 0;
  }
  to {
    // top: 0;
    opacity: 1;
  }
}

// error class
// FIXME can't use this in the component file because vars wont work
// TODO create class colours vs using sass variables if they wont import.
// creating classes to control the state and primary / secondary colours.
// .--error, .--error:focus {
//   border-bottom: 2px solid $error;
// }


.--error {
  input {
    background: rgba( $error, 0.2 );;
  }
  input:focus {
    border-bottom: 2px solid $error;
  }
  input::placeholder {
    color: black !important;
  }
  span {
    color: black !important;
  }
}
